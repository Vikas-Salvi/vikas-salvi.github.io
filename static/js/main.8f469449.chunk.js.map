{"version":3,"sources":["shared/globalservice.js","shared/top-nav.js","shared/useLogin.js","shared/validateLogin.js","shared/loginform.js","shared/login.js","quiz/Turn.js","quiz/Continue.js","quiz/Footer.js","quiz/questionbank.js","quiz/useQuizState.js","quiz/Quiz.js","quiz/GameCategory.js","components/Message.js","hooks/UseCallback/Title.js","hooks/UseCallback/Button.js","hooks/UseCallback/Count.js","hooks/UseCallback/ParentCallbackComponent.js","shared/notfound.js","components/Welcome.js","shared/subroutechild.js","shared/subroute.js","protectedroute/public.js","shared/privateroute.js","shared/userstate.js","charts/useChart.js","charts/barchart.js","charts/donutchart.js","charts/chartscomponent.js","App.js","serviceWorker.js","index.js"],"names":["globalService","authenticate","a","promise","Promise","resolve","reject","setTimeout","result","signout","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","margin","title","TopNavigation","username","isLoggedIn","history","useHistory","appstate","useContext","AppContext","classes","useEffect","console","log","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","to","onClick","e","preventDefault","then","res","dispatch","type","push","useLogin","initialform","submit","validate","errorform","useState","form","setForm","errors","setErrors","formValidated","setFormValidated","Object","keys","length","handleChange","target","name","value","handleSubmit","values","age","isNaN","grade","center","alignItems","flexDirection","card","maxWidth","media","height","paddingTop","errorForm","LoginForm","props","from","location","state","pathname","user","action","Fragment","onSubmit","noValidate","required","onChange","placeholder","size","width","Login","Date","toString","Card","CardHeader","CardMedia","image","CardContent","component","CardActions","Turn","QuizContext","quiz","Question","disable","question","imageUrl","src","answers","map","answer","key","disabled","selectedAnswer","highlight","quizDispatch","onSelectHandle","formControl","minWidth","Continue","continuedisabled","percentage","attemptedCount","questionsByCategory","modal","display","justifyContent","paper","backgroundColor","boxShadow","shadows","padding","Footer","isOpen","React","open","setOpen","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","isWinner","QuestionBank","id","category","questions","categories","reduce","p","c","i","concat","uniqcategories","uniq","selectedQuestions","filter","allanswers","shuffle","splice","sampleAnswer","sample","some","useQuizState","initialState","_category","_isCorrect","isCorrect","correctAnswers","_attemptedCount","_percentage","Math","round","_isWinner","createContext","reducer","Quiz","useReducer","Provider","GameCategory","setCategory","FormControl","InputLabel","Select","labelWidth","MenuItem","Message","message","this","setState","changeMessage","Component","memo","fetchData","handleClick","children","text","count","Users","lazy","ParentCallbackComponent","setAge","arr","useMemo","salary","setSalary","incrementAge","useCallback","incrementSalary","updateForm","fetch","response","json","fallback","NotFound","Welcome","match","url","SubRouteChild","useParams","useLocation","goBack","SubRoute","path","Public","PrivateRoute","rest","render","useChart","legendPosition","data","initialData","labels","datasets","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","chartOptions","maintainAspectRatio","fontSize","legend","fontColor","chartdata","BarChart","subheader","options","DonutChartComponent","Charts","App","_temp","b","Set","undefined","dup","len","indexOf","j","sort","obj","exact","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f469449.chunk.js","sourcesContent":["const globalService = {\r\n    authenticate: async () => {\r\n        let promise = new Promise((resolve, reject) => {\r\n            setTimeout(()=> resolve(\"authenticated!\"), 100)\r\n        });\r\n        let result = await promise;      \r\n        return result;  \r\n    },\r\n    signout: async () => {\r\n        let promise = new Promise((resolve, reject) => {\r\n            setTimeout(()=> resolve(\"signed out!\"), 1000)\r\n        });\r\n        let result = await promise;\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default globalService","import React, { useContext, useEffect } from 'react';\r\nimport  {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Link } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport globalService from './globalservice';\r\n\r\nimport { AppContext } from '../App';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(3),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst TopNavigation = ({ username, isLoggedIn }) => {\r\n    const history = useHistory();\r\n    const appstate = useContext(AppContext);\r\n    const classes = useStyles();\r\n    const onNavigate = e => {\r\n        e.preventDefault();\r\n        globalService.signout()\r\n        .then((res)=>{            \r\n            appstate.dispatch({type: 'logout'});\r\n            history.push(\"/login\");\r\n        });        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log('Top nav component rendering...');\r\n    },[username, isLoggedIn]);\r\n\r\n    console.log('Top nav component again rendering...');\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\">\r\n                        App\r\n                    </Typography>     \r\n                    <Typography variant=\"h5\">&nbsp;</Typography>                             \r\n                    <NavLink to=\"/game\" className=\"nav-link\" >Game</NavLink>\r\n                    <NavLink to=\"/form\" className=\"nav-link\" >Form</NavLink>\r\n                    <NavLink to=\"/welcome\" className=\"nav-link\" >Welcome</NavLink>\r\n                    <NavLink to=\"/subroute\" className=\"nav-link\">Sub Route</NavLink>\r\n                    <NavLink to=\"/charts\" className=\"nav-link\">Charts</NavLink>                  \r\n                    <p className={classes.title}></p> \r\n                    {\r\n                        isLoggedIn ? \r\n                        (<NavLink to=\"/\" className=\"nav-link\" onClick={onNavigate}>Logout</NavLink>) : \r\n                        null\r\n                    }\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        color=\"inherit\">\r\n                        <AccountCircle />\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            {username}\r\n                        </Typography>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopNavigation;\r\n","import {useState, useEffect} from 'react';\r\n\r\nconst useLogin = (initialform, submit, validate, errorform) => {\r\n\r\n    const [form, setForm] = useState(initialform);\r\n    const [errors, setErrors] = useState(errorform);\r\n    const [formValidated, setFormValidated] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setForm({\r\n            ...form,\r\n            [name]: value\r\n        });        \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setFormValidated(true);\r\n        setErrors(validate(form)); \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(Object.keys(errors).length === 0){\r\n            submit();\r\n        }\r\n    },[errors]);\r\n        \r\n    return {\r\n        handleChange, \r\n        handleSubmit, \r\n        form, \r\n        errors,\r\n        formValidated\r\n    }\r\n}\r\n\r\nexport default useLogin","export default function validate(values){\r\n    let errors = {};\r\n\r\n    if(!values.username){\r\n        errors.username = \"User name is required\";   \r\n    }\r\n    if(!values.age){\r\n        errors.age = \"Age is required\";\r\n    }\r\n    else if(isNaN(values.age)){\r\n        errors.age = \"Age should be a number\";\r\n    }\r\n    else if(values.age < 5 && values.age > 15){\r\n        errors.age = \"Age should be between 5 and 15\";\r\n    }\r\n    if(!values.grade){\r\n        errors.grade = \"Grade is required\";\r\n    }\r\n\r\n    return errors;\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport useLogin from './useLogin';\r\nimport { AppContext } from '../App';\r\nimport { Redirect } from 'react-router-dom';\r\nimport globalService from './globalservice';\r\nimport validate from './validateLogin';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    center: {\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n    },\r\n}));\r\n\r\nconst errorForm = {\r\n    username: \"\",\r\n    age: \"\",\r\n    grade: \"\"\r\n}\r\nconst LoginForm = (props) => {\r\n    const classes = useStyles();\r\n    //debugger;\r\n    const { from } = props.location.state || { from: { pathname: '/' } };\r\n    const state = useContext(AppContext);\r\n    const { handleChange, handleSubmit, form, errors, formValidated } = useLogin(state.user, submit, validate, errorForm);\r\n\r\n    function submit() {\r\n        //alert('submitted');        \r\n        globalService.authenticate()\r\n            .then((res) => {\r\n                state.dispatch({ type: 'login', action: form });\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('LoginForm component rendering...');\r\n    }, [state.user.isLoggedIn]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                state.user.isLoggedIn ?\r\n                    (\r\n                        <Redirect to={from}></Redirect>\r\n                    ) :\r\n                    (\r\n                        <form className={`container-fluid ${formValidated ? 'was-validated' : ''}`} onSubmit={handleSubmit} noValidate>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12\" >\r\n                                    <input type=\"text\"\r\n                                        name=\"username\" required\r\n                                        value={form.username}\r\n                                        onChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"User Name *\">\r\n                                    </input>\r\n                                    {\r\n                                        errors.username ?\r\n                                            <div className=\"invalid-feedback\">\r\n                                                User Name is required.\r\n                        </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12\">\r\n                                    <input type=\"text\"\r\n                                        name=\"age\" required\r\n                                        value={form.age}\r\n                                        onChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Age *\">\r\n                                    </input>\r\n                                    {\r\n                                        errors.age ?\r\n                                            <div className=\"invalid-feedback\">\r\n                                                Age is required.\r\n                        </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12\">\r\n                                    <input type=\"text\"\r\n                                        name=\"grade\"\r\n                                        required\r\n                                        value={form.grade}\r\n                                        onChange={handleChange}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Grade *\">\r\n                                    </input>\r\n                                    {\r\n                                        errors.grade ?\r\n                                            <div className=\"invalid-feedback\">\r\n                                                Grade is required.\r\n                        </div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-12\">\r\n                                    <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\">Login</Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    )\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport LoginForm from './loginform';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    center: {\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    card: {\r\n        width: 400,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n    },\r\n}));\r\n\r\nconst Login = ({ user, ...props }) => {\r\n    const dateToday = new Date().toString();\r\n    const classes = useStyles(); \r\n    \r\n    useEffect(()=>{\r\n        console.log('Login component rendering...');\r\n    },[]);\r\n\r\n    console.log('Login component again rendering...');\r\n    \r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <Card className={classes.card}>\r\n                <CardHeader\r\n                    title=\"Login to play the Quiz\"\r\n                />\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image=\"images/quiz.jpg\"\r\n                    title=\"Quiz time\"\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Let's play the quiz and win exiting prizes!\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.center}>\r\n                    <LoginForm {...props}></LoginForm>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport { QuizContext } from './Quiz';\r\n\r\nconst Turn = () => {\r\n    const state = useContext(QuizContext);\r\n    //debugger;\r\n\r\n    const onSelectHandle = (answer) => {\r\n        if(!state.quiz.disable){\r\n            state.quizDispatch({ type: 'selectAnswer', answer: answer });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('Turn component rendering...');\r\n    }, [state.quiz.Question, state.quiz.disable]);\r\n\r\n    console.log('Turn component again rendering...');\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-4 offset-1\">\r\n                    {\r\n                        state.quiz.Question.question[0].imageUrl == '' ?\r\n                            (\r\n                                <div className=\"jumbotron\">\r\n                                    <h3>{state.quiz.Question.question[0].question}</h3>\r\n                                </div>) :\r\n                            (<img className=\"img img-responsive img-thumbnail\" src={state.quiz.Question.question[0].imageUrl}></img>)\r\n                    }\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <ul className=\"nav flex-column\">\r\n                        {\r\n                            state.quiz.Question.answers.map((answer) => (\r\n                                <li key={answer}\r\n                                    disabled={state.quiz.disable}\r\n                                    className={\"nav-item nav-list-item \" + (state.quiz.selectedAnswer === answer ? state.quiz.highlight : '')}\r\n                                    onClick={() => onSelectHandle(answer)}>\r\n                                    <h4>{answer}</h4>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Turn","import React, { useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { QuizContext } from './Quiz';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        width: 400,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    center: {\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 250,\r\n    },\r\n}));\r\n\r\nconst Continue = () => {\r\n    const history = useHistory();\r\n    const state = useContext(QuizContext);\r\n\r\n    const onContinue = e => {\r\n        e.preventDefault();\r\n        state.quizDispatch({ type: 'continue' });\r\n    }\r\n\r\n    const onRestart = e => {\r\n        e.preventDefault();\r\n        state.quizDispatch({ type: 'reset' });\r\n    }\r\n\r\n    const onStop = e => {\r\n        e.preventDefault();\r\n        state.quizDispatch({ type: 'stop' });\r\n        history.push(\"/game\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('Continue component rendering....');\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    debugger;\r\n    return (\r\n        <React.Fragment>\r\n            <p></p>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 offset-1\">\r\n                        <Button variant=\"contained\" color=\"primary\" disabled={state.quiz.continuedisabled} onClick={onContinue}>Continue</Button>\r\n                    </div>\r\n                    <div className=\"col-4 offset-1\">\r\n                        <Button variant=\"contained\" onClick={onRestart} className={classes.menuButton}>Restart Game!</Button>\r\n                        <Button variant=\"contained\" onClick={onStop} color=\"secondary\" className={classes.menuButton}>Stop Game!</Button>\r\n                        <h4>You scored {state.quiz.percentage} % / 100 %</h4>\r\n                        <small>Attempted, {state.quiz.attemptedCount} of {state.quiz.Question.questionsByCategory.length} questions</small>\r\n                        <br />\r\n                        <small>To win, you must score 80%</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Continue","import React, { useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { QuizContext } from './Quiz';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: 'transparent',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    card: {\r\n        width: 400,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n    },\r\n    center: {\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n}));\r\n\r\nconst Footer = ({ isOpen }) => {\r\n\r\n    const state = useContext(QuizContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        state.quizDispatch({ type: 'reset' });\r\n        setOpen(false);\r\n    };\r\n    const onRestart = () => {\r\n        state.quizDispatch({ type: 'reset' });\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('Footer component rendering...');\r\n        setOpen(isOpen);\r\n    }, [isOpen])\r\n\r\n    const classes = useStyles();\r\n    console.log('Footer component again rendering...');\r\n    //debugger;\r\n    return (\r\n        <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 250,\r\n            }}\r\n        >\r\n            <Fade in={open}>\r\n                <div className={classes.paper}>\r\n                    <Card className={classes.card}>\r\n                        {\r\n                            state.quiz.isWinner === 'winner' ? (\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image=\"images/winner.png\"\r\n                                    title=\"Winner\"\r\n                                />\r\n                            ) :\r\n                                (\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image=\"images/loser.jpg\"\r\n                                        title=\"Loser\"\r\n                                    />\r\n                                )\r\n                        }\r\n                        <CardContent className={classes.center}>\r\n                            <h4 className=\"text-center\">You scored {state.quiz.percentage} %</h4>\r\n                        </CardContent>\r\n                        <CardActions className={classes.center}>\r\n                            <Button onClick={onRestart} color=\"secondary\" size=\"large\">Resart Game</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n            </Fade>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Footer","import { shuffle, sample, find, contains, each, includes, uniq } from 'underscore';\r\n\r\nexport const QuestionBank = {\r\n    questions: [\r\n        {\r\n            id: 1,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/cat.jpg',\r\n            answers: ['Cat']\r\n        },\r\n        {\r\n            id: 2,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/tiger.jpg',\r\n            answers: ['Tiger']\r\n        },\r\n        {\r\n            id: 3,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/lion.jpg',\r\n            answers: ['Lion']\r\n        },\r\n        {\r\n            id: 4,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/leopard.jpg',\r\n            answers: ['Leopard']\r\n        },\r\n        {\r\n            id: 5,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/hippopotamus.jpg',\r\n            answers: ['Hippopotamus']\r\n        },\r\n        {\r\n            id: 6,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/elephant.jpg',\r\n            answers: ['Elephant']\r\n        },\r\n        {\r\n            id: 7,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/camel.jpg',\r\n            answers: ['Camel']\r\n        },\r\n        {\r\n            id: 8,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/rhino.jpg',\r\n            answers: ['Rhino']\r\n        },\r\n        {\r\n            id: 9,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/butterfly.jpg',\r\n            answers: ['Butterfly']\r\n        },\r\n        {\r\n            id: 10,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/goldfish.jpeg',\r\n            answers: ['Goldfish']\r\n        },\r\n        {\r\n            id: 22,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/dog.jpg',\r\n            answers: ['Dog']\r\n        },\r\n        {\r\n            id: 23,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/dolphin.jpg',\r\n            answers: ['Dolphin']\r\n        },\r\n        {\r\n            id: 24,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/starfish.jpg',\r\n            answers: ['Starfish']\r\n        },\r\n        {\r\n            id: 25,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/seahourse.jpg',\r\n            answers: ['Seahourse']\r\n        },\r\n        {\r\n            id: 26,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/mouse.jpg',\r\n            answers: ['Mouse']\r\n        },\r\n        {\r\n            id: 27,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/jellyfish.jpg',\r\n            answers: ['Jelly fish']\r\n        },\r\n        {\r\n            id: 28,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/whale.jpg',\r\n            answers: ['Whale']\r\n        },\r\n        {\r\n            id: 29,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/sealion.jpg',\r\n            answers: ['Sealion']\r\n        },\r\n        {\r\n            id: 30,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/dinosaur.jpg',\r\n            answers: ['Dinosaur']\r\n        },\r\n        {\r\n            id: 31,\r\n            category: 'pictures',\r\n            question: 'Please identify the image, and select one from the following options',\r\n            imageUrl: 'images/animals/lizard.jpg',\r\n            answers: ['Lizard']\r\n        },\r\n        {\r\n            id: 9,\r\n            category: 'maths',\r\n            question: '3 + 3',\r\n            imageUrl: '',\r\n            answers: ['6']\r\n        }\r\n        ,\r\n        {\r\n            id: 10,\r\n            category: 'maths',\r\n            question: '7 + 3',\r\n            imageUrl: '',\r\n            answers: ['10']\r\n        }\r\n        ,\r\n        {\r\n            id: 11,\r\n            category: 'maths',\r\n            question: '6 - 6',\r\n            imageUrl: '',\r\n            answers: ['0']\r\n        }\r\n        ,\r\n        {\r\n            id: 12,\r\n            category: 'maths',\r\n            question: '10 - 7',\r\n            imageUrl: '',\r\n            answers: ['3']\r\n        }\r\n        ,\r\n        {\r\n            id: 13,\r\n            category: 'maths',\r\n            question: '12 + 7',\r\n            imageUrl: '',\r\n            answers: ['19']\r\n        }\r\n        ,\r\n        {\r\n            id: 14,\r\n            category: 'maths',\r\n            question: '4 + 7',\r\n            imageUrl: '',\r\n            answers: ['11']\r\n        }\r\n        ,\r\n        {\r\n            id: 15,\r\n            category: 'maths',\r\n            question: '11 - 4',\r\n            imageUrl: '',\r\n            answers: ['7']\r\n        }\r\n        ,\r\n        {\r\n            id: 16,\r\n            category: 'maths',\r\n            question: '9 + 3',\r\n            imageUrl: '',\r\n            answers: ['12']\r\n        }\r\n        ,\r\n        {\r\n            id: 17,\r\n            category: 'maths',\r\n            question: '8 - 7',\r\n            imageUrl: '',\r\n            answers: ['1']\r\n        }\r\n        ,\r\n        {\r\n            id: 18,\r\n            category: 'maths',\r\n            question: '6 + 7',\r\n            imageUrl: '',\r\n            answers: ['13']\r\n        }\r\n        ,\r\n        {\r\n            id: 19,\r\n            category: 'maths',\r\n            question: '7 - 2',\r\n            imageUrl: '',\r\n            answers: ['5']\r\n        }\r\n        ,\r\n        {\r\n            id: 20,\r\n            category: 'maths',\r\n            question: '9 - 5',\r\n            imageUrl: '',\r\n            answers: ['4']\r\n        }\r\n        ,\r\n        {\r\n            id: 21,\r\n            category: 'maths',\r\n            question: '4 + 4',\r\n            imageUrl: '',\r\n            answers: ['8']\r\n        }\r\n    ],\r\n    getGameCategories: (questions) => {\r\n        const categories = questions.reduce((p, c, i) => {\r\n            return p.concat(c.category);\r\n        }, []);\r\n        const uniqcategories = uniq(categories);\r\n        return {\r\n            uniqcategories\r\n        }\r\n    },\r\n    getQuestions: (selectedQuestions, questions, category) => {\r\n        //debugger;\r\n        const questionsByCategory = questions.filter((question) => question.category === category);\r\n        const categories = questions.reduce((p, c, i) => {\r\n            return p.concat(c.category);\r\n        }, []);\r\n        const allanswers = questionsByCategory.reduce((p, c, i) => {\r\n            return p.concat(c.answers);\r\n        }, []);\r\n        const answers = shuffle(allanswers).splice(0, 4);\r\n        const sampleAnswer = sample(answers, 1);\r\n        const question = questionsByCategory.filter((question) => {\r\n            return question.answers.some((answer) => {\r\n                return answer === sampleAnswer[0]\r\n            });\r\n        });\r\n\r\n        return {\r\n            questions,\r\n            questionsByCategory,\r\n            answers,\r\n            question\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nimport { QuestionBank } from './questionbank';\r\n\r\nconst useQuizState = (initialState) => {\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'startgame': {\r\n                debugger;\r\n                const _category = action.category ? action.category : 'pictures';\r\n                return {\r\n                    ...state,\r\n                    category: _category,\r\n                    Question: QuestionBank.getQuestions([0], QuestionBank.questions, _category)\r\n                }\r\n            }\r\n            case 'selectAnswer': {\r\n                const _isCorrect = state.Question.question[0].answers.map((answer) => answer === action.answer)[0];\r\n                const _selectedAnswer = action.answer;\r\n                const _highlight = _isCorrect ? 'green' : 'red';\r\n                return {\r\n                    ...state, isCorrect: _isCorrect, disable: true, highlight: _highlight, selectedAnswer: _selectedAnswer,\r\n                    correctAnswers: _isCorrect ? state.correctAnswers + 1 : state.correctAnswers, continuedisabled: false\r\n                }\r\n            }\r\n            case 'continue':\r\n                const _attemptedCount = state.attemptedCount + 1;\r\n                const _percentage = Math.round((100 * state.correctAnswers) / state.Question.questionsByCategory.length);\r\n                const _isWinner = _percentage >= 80 ? 'winner' : 'loser';\r\n                if (_attemptedCount == state.Question.questionsByCategory.length) {\r\n                    return {\r\n                        ...state, Question: QuestionBank.getQuestions(state.selectedQuestions, QuestionBank.questions, state.category),\r\n                        isCorrect: '', disable: false, highlight: '', percentage: _percentage, attemptedCount: _attemptedCount,\r\n                        selectedAnswer: '', isWinner: _isWinner, continuedisabled: true\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        ...state, Question: QuestionBank.getQuestions(state.selectedQuestions, QuestionBank.questions, state.category),\r\n                        isCorrect: '', disable: false, highlight: '', percentage: _percentage, attemptedCount: _attemptedCount,\r\n                        selectedAnswer: '', continuedisabled: true\r\n                    }\r\n                }\r\n            case 'reset':\r\n                const _category = state.category ? state.category : 'pictures';\r\n                return {\r\n                    ...initialState,\r\n                    category: _category,\r\n                    Question: QuestionBank.getQuestions([0], QuestionBank.questions, _category)\r\n                }\r\n            case 'stop':\r\n                return {\r\n                    ...initialState\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    return [reducer]\r\n\r\n}\r\n\r\nexport default useQuizState","import React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport './quizstyles.css';\r\nimport Turn from './Turn';\r\nimport Continue from './Continue';\r\nimport Footer from './Footer';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport useQuizState from './useQuizState';\r\nimport { AppContext } from '../App';\r\n\r\nexport const QuizContext = React.createContext(null);\r\n\r\nconst initialState = {\r\n    Question: null,\r\n    category: '',\r\n    highlight: '',\r\n    disable: false,\r\n    continuedisabled: true,\r\n    selectedQuestions: [],\r\n    selectedAnswer: '',\r\n    correctAnswers: 0,\r\n    percentage: '0',\r\n    isCorrect: false,\r\n    attemptedCount: 0,\r\n    isWinner: ''\r\n}\r\n\r\nconst [reducer] = useQuizState(initialState);\r\n\r\nconst Quiz = () => {\r\n    const appstate = useContext(AppContext);\r\n    //debugger;\r\n    const [quiz, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        console.log('Quiz component rendering...');\r\n        dispatch({ type: 'startgame', category: appstate.user.category });\r\n    }, [])\r\n    //debugger;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <QuizContext.Provider value={{ quiz: quiz, quizDispatch: dispatch }}>\r\n                <Card>\r\n                    <CardContent>\r\n                        {\r\n                            quiz.Question != null ?\r\n                                (\r\n                                    <div>\r\n                                        <Turn></Turn>\r\n                                        <Continue></Continue>\r\n                                        <Footer isOpen={quiz.isWinner != ''}></Footer>\r\n                                    </div>\r\n                                ) : null\r\n                        }\r\n                    </CardContent>\r\n                </Card>\r\n            </QuizContext.Provider>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { useContext, useEffect, useState, useReducer } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { AppContext } from '../App';\r\nimport { QuestionBank } from './questionbank';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        width: 400,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n    },\r\n    center: {\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 250,\r\n    },\r\n}));\r\n\r\nconst GameCategory = () => {\r\n\r\n    const state = useContext(AppContext);\r\n\r\n    const categories = QuestionBank.getGameCategories(QuestionBank.questions).uniqcategories;\r\n\r\n    const [category, setCategory] = useState('');\r\n\r\n    const onHandleChange = e => {\r\n        setCategory(e.target.value);\r\n        state.dispatch({ type: 'selectCategory', category: e.target.value });\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('Footer component rendering...');\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    console.log('Footer component again rendering...');\r\n    //debugger;\r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image=\"images/duoquiz.jpg\"\r\n                    title=\"Quiz\"\r\n                />\r\n                <CardContent>\r\n                    <div className=\"jumbotron\">\r\n                        <h4>Welcome! {state.user.username}</h4>\r\n                        <h5>{state.user.grade}</h5>\r\n                    </div>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Select the Game Category you would like to play!\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.center}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel id=\"game-category-label\">\r\n                            Game Categories\r\n                        </InputLabel>\r\n                        <Select\r\n                            id=\"game-category-select\"\r\n                            value={category}\r\n                            labelWidth={130}\r\n                            onChange={onHandleChange}>\r\n                            {\r\n                                categories.map((category) =>\r\n                                    (<MenuItem key={category} value={category}>{category}</MenuItem>)\r\n                                )\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Link to=\"/quiz\" className=\"nav-link-button nav-link-button-primary\">Start Game!</Link>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameCategory","import React, { Component } from 'react';\r\n\r\nclass Message extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            message: 'Message to Visitor!'\r\n        }\r\n    }\r\n\r\n    changeMessage() {\r\n        this.setState({\r\n            message: 'Thankyou Visitor!'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>{this.state.message}</h4>\r\n                <button onClick={() => this.changeMessage()}>Subscribe</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","import React, {useEffect, useMemo} from 'react';\r\n\r\nconst Title = (props) => {    \r\n    console.log('Rendering Title');\r\n    useEffect(()=>{        \r\n        props.fetchData(1);        \r\n    },[props.fetchData]);\r\n\r\n    return (\r\n    <div>\r\n        <h2>Title component -useCallback Hook - {props.title}</h2>        \r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(Title)","import React from 'react';\r\n\r\nconst Button = ({handleClick, children}) => {\r\n    console.log('Rendering button - ', children);\r\n    return (\r\n        <div>\r\n            <button onClick={handleClick}>\r\n                {children}\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(Button)","import React from 'react';\r\n\r\nconst Count = ({text, count}) => {\r\n    console.log(`Rendering - ${text}`);\r\n    return (\r\n        <div>\r\n            {text} - {count}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(Count)","import React, { useState, useCallback, useMemo, useEffect, Suspense } from 'react';\r\nimport Title from './Title';\r\nimport Button from './Button';\r\nimport Count from './Count';\r\n//import Users from './Users';\r\nconst Users = React.lazy(()=> import('./Users'));\r\n\r\nconst ParentCallbackComponent = () => {\r\n    const arr1 = ['One', 'Two', 'Three'];\r\n    const [age, setAge] = useState(35);\r\n    const arr = useMemo(()=>{\r\n        return ['One', 'Two', 'Three'];\r\n    },[]); \r\n    \r\n    const [salary, setSalary] = useState(150000);    \r\n    const [form, setForm] = useState({\r\n        name: 'Vikas Salvi',\r\n        age: 35\r\n    });       \r\n    const incrementAge = useCallback(() => {\r\n        setAge(age + 1);\r\n    }, [age]);\r\n    const incrementSalary = useCallback(() => {\r\n        setSalary(salary + 10000);\r\n    }, [salary]);\r\n    \r\n    const updateForm = useCallback(() => {\r\n        setForm({\r\n            name: 'Dhaval Balsara',\r\n            age: 35\r\n        });\r\n    }, [form]);\r\n\r\n    const fetchData = useCallback(id => {\r\n        return fetch(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n        .then(response => response.json())\r\n        .then(json => console.log(json))\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        fetchData(1); \r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <Title title=\"This is the Title\" fetchData={fetchData} arr={arr}></Title>\r\n            <Count text=\"Age\" count={age}></Count>\r\n            <Button handleClick={incrementAge}>Increment Age</Button>\r\n            <Count text=\"Salary\" count={salary}></Count>\r\n            <Button handleClick={incrementSalary} >Increment Salary</Button>\r\n            <div>\r\n                <h4>{form.name}</h4>\r\n                <h4>{form.age}</h4>\r\n            </div>\r\n            <Button handleClick={updateForm}>Update Form</Button>\r\n            <Suspense fallback={<h1>Loading...</h1>}>\r\n                <Users></Users>\r\n            </Suspense>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ParentCallbackComponent","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return(\r\n        <h1>404 Not Found!</h1>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n\r\n","import React from 'react';\r\n\r\nconst Welcome = ({match}) => {   \r\n      \r\n    return(\r\n        <h4>Hello! {match.url}, you are inside Class Component</h4>\r\n    )\r\n}\r\n\r\nexport default Welcome","import React from 'react';\r\nimport {useParams, useLocation, useHistory} from 'react-router-dom';\r\n\r\nconst SubRouteChild = () => {\r\n    const {id} = useParams();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    console.log(location);\r\n    console.log(id);\r\n    console.log(history);\r\n    return(\r\n        <div>\r\n            <h2>Sub Route {id}</h2>\r\n            <button onClick={()=>history.push('/')}>Go Home</button>\r\n            <button onClick={()=>history.goBack()}>Go Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubRouteChild","import React, {} from 'react';\r\nimport { NavLink, Switch, Route, useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport SubRouteChild from './subroutechild';\r\n\r\nconst SubRoute = ({match, location, history}) => {   \r\n    //console.log(match);\r\n    //console.log(location);\r\n    //console.log(history);\r\n    //debugger;\r\n    return(\r\n        <div>\r\n            <ul>\r\n                <li><NavLink to={`${match.url}/1`}>Sub Route 1</NavLink> </li>\r\n                <li><NavLink to={`${match.url}/2`}>Sub Route 2</NavLink> </li>\r\n                <li><NavLink to={{\r\n                    pathname: `${match.url}/3`,\r\n                    state: {\r\n                        from: \"subroute\"\r\n                    }\r\n                }}>Sub Route 3</NavLink> </li>\r\n            </ul>\r\n            <h4>{match.path}</h4>   \r\n            <Switch>\r\n                <Route path={`${match.path}/:id`} component={SubRouteChild} ></Route>                \r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubRoute","import React from 'react';\r\n\r\nconst Public = () => {\r\n    return(\r\n        <h1>Public page</h1>\r\n    )\r\n}\r\n\r\nexport default Public\r\n\r\n","import React, {useContext, useEffect} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport globalService from './globalservice';\r\nimport {AppContext} from '../App';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const state = useContext(AppContext);\r\n    //debugger;\r\n    useEffect(()=>{\r\n        console.log('PrivateRoute component rendering...');\r\n    },[state.user.isLoggedIn]);\r\n \r\n    return(\r\n        <Route {...rest} render={(props)=>(\r\n            state.user.isLoggedIn\r\n            ? <Component {...props}></Component>\r\n            : <Redirect to={{\r\n                pathname: '/login',\r\n                state: {from: props.location} \r\n            }}></Redirect>\r\n        )}></Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React, {createContext, useReducer} from \"react\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    username: '',\r\n    age: '',\r\n    grade: '',\r\n    category: ''\r\n}\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'login': {\r\n        const form = action.action;\r\n        return { ...state, isLoggedIn: true, username: form.username, age: form.age, grade: form.grade }\r\n      }\r\n      case 'logout':{\r\n        return { ...initialState, isLoggedIn: false }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nconst UserState = ({children}) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user: state, dispatch: dispatch }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n};\r\n\r\nexport const UserContext = createContext(initialState);\r\n\r\nexport default UserState;","import React, {useState} from 'react';\r\n\r\nconst useChart = (legendPosition = 'top', data) => {\r\n    const initialData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n          label: 'Month dataset',\r\n          backgroundColor: [\r\n              'rgba(255,99,132,0.6)',\r\n              'rgba(54,162,235,0.6)',\r\n              'rgba(255,206,86,0.6)',\r\n              'rgba(75,192,192,0.6)',\r\n              'rgba(153,102,255,0.6)',\r\n              'rgba(255,159,64,0.6)',\r\n              'rgba(255,99,132,0.6)'\r\n          ],\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n          hoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: data\r\n        }]\r\n    };\r\n\r\n    const chartOptions = {\r\n        maintainAspectRatio: true,\r\n        title:{\r\n            display: true,\r\n            text: 'Month wise dataset',\r\n            fontSize: 22\r\n        },\r\n        legend:{\r\n            display: true,\r\n            position: legendPosition,\r\n            labels:{\r\n                fontColor: '#000'\r\n            }\r\n        }\r\n    };\r\n    \r\n    const [chartdata, setChartData] = useState(initialData);\r\n\r\n    return {\r\n        chartdata,\r\n        chartOptions\r\n    }\r\n}\r\n\r\nexport default useChart","import React, { useState } from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport useChart from './useChart';\r\n  \r\nconst BarChart = () => {\r\n    const data = [65, 59, 80, 81, 56, 55, 40];\r\n    const {chartdata, chartOptions} = useChart(\"top\",data);\r\n    \r\n    return(\r\n    <Card variant=\"outlined\">\r\n        <CardHeader title=\"Bar Chart\" subheader=\"\"/>\r\n        <CardContent>\r\n            <Bar \r\n            data={chartdata}\r\n            options={\r\n                chartOptions\r\n            }\r\n            />            \r\n        </CardContent>  \r\n        <CardActions>            \r\n        </CardActions>    \r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default BarChart","import React from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport useChart from './useChart';\r\n\r\nconst DonutChartComponent = () => {\r\n    const data = [40, 55, 56, 71, 70, 60, 65];\r\n    const {chartdata, chartOptions} = useChart(\"right\", data);\r\n\r\n    return(\r\n    <Card variant=\"outlined\">\r\n        <CardHeader title=\"Donut Chart\" subheader=\"\"/>\r\n        <CardContent>\r\n            <Doughnut\r\n            data={chartdata}\r\n            options={\r\n                chartOptions\r\n            }/>\r\n        </CardContent>      \r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default DonutChartComponent","import React from 'react';\r\nimport BarChart from './barchart';\r\nimport DonutChartComponent from './donutchart';\r\n\r\nconst Charts = () => {\r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 text-center\">\r\n                    <h1>Charts</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6 text-center\">\r\n                    <BarChart></BarChart>\r\n                </div>\r\n                <div className=\"col-6 text-center\">\r\n                    <DonutChartComponent></DonutChartComponent>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts","import React, { useContext, useReducer } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Redirect, NavLink, Switch } from 'react-router-dom';\nimport TopNavigation from './shared/top-nav';\nimport Login from './shared/login';\nimport Quiz from './quiz/Quiz';\nimport Form from './shared/form';\nimport GameCategory from './quiz/GameCategory';\nimport Message from './components/Message';\nimport ParentCallbackComponent from './hooks/UseCallback/ParentCallbackComponent';\nimport NotFound from './shared/notfound';\nimport Welcome from './components/Welcome';\nimport SubRoute from './shared/subroute';\nimport Public from './protectedroute/public';\nimport Protected from './protectedroute/protected';\nimport PrivateRoute from './shared/privateroute';\nimport UserState from './shared/userstate';\nimport Charts from './charts/chartscomponent';\n\nexport const AppContext = React.createContext(null);\n\nconst initialState = {\n  isLoggedIn: false,\n  username: '',\n  age: '',\n  grade: '',\n  category: ''\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'login': {\n      const form = action.action;\n      return { ...state, isLoggedIn: true, username: form.username, age: form.age, grade: form.grade }\n    }\n    case 'logout': {\n      return { ...initialState, isLoggedIn: false }\n    }\n    case 'selectCategory': {\n      const _selectedCategory = action.category;\n      return {\n        ...state,\n        category: _selectedCategory\n      }\n    }\n    case 'reset':\n      return initialState\n    default:\n      return state\n  }\n}\n\nconst App = () => {\n\n  const [user, dispatch] = useReducer(reducer, initialState);\n\n  let a = [1, 2, 5, 2, 1, 8];\n  let arr = [1, 3, 2, \"vikas\", 1, false, \"poonam\", null, \"avisha\", 5, undefined, null, 5];\n\n  let arrSet = new Set(arr);\n  //console.log([...arrSet]);\n\n  let b = [];\n  let c = [];\n  let dup = [];\n  let len = a.length;\n\n  for (let i = 0; i < len; i++) {\n    if (b.indexOf(a[i]) === -1) {\n      b.push(a[i]);\n    }\n  }\n  //console.log(b); \n\n  for (let i = 0; i < len - 1; i++) {\n    for (let j = i + 1; j < len; j++) {\n      if (a[i] === a[j]) {\n        dup.push(a[j]);\n      }\n    }\n  }\n  //console.log(dup);\n\n  a.sort();\n  let _temp;\n  for (let i = 0; i < len; i++) {\n    if (a[i] !== _temp) {\n      c.push(a[i]);\n      _temp = a[i];\n    }\n  }\n  //console.log(c);\n\n  let obj = {}\n  for (let i of a) {\n    obj[i] = true;\n  }\n  let d = Object.keys(obj);\n  //console.log(d);\n\n  let bSet = new Set(a);\n  //console.log([...bSet]);\n\n  return (\n    <Router>\n      <AppContext.Provider value={{ user: user, dispatch: dispatch }}>\n        <div className=\"App\">\n          <TopNavigation username={user.username} isLoggedIn={user.isLoggedIn}></TopNavigation>\n          <div className=\"main-content\">\n            <Switch>\n              <Route exact path=\"/\" component={Message} ></Route>\n              <Route path=\"/category\" component={GameCategory}></Route>\n              <Route exact path=\"/quiz1\" render={() => (\n                user.isLoggedIn ? (\n                  <Quiz></Quiz>\n                ) : (\n                    <Login></Login>\n                  )\n              )}\n              ></Route>\n              <Route path=\"/form\" component={ParentCallbackComponent}></Route>\n              <Route path=\"/welcome\" component={Welcome}></Route>\n              <Route path=\"/welcome\" render={(props) => (\n                <Welcome name=\"Vikas Salvi\" ></Welcome>\n              )}></Route>\n              <Route path=\"/subroute\" component={SubRoute}></Route>\n              <Route path=\"/public\" component={Public}></Route>\n              <Route path=\"/login\" component={Login}></Route>\n              <Route path=\"/charts\" component={Charts}></Route>\n              <PrivateRoute path=\"/quiz\" component={Quiz}></PrivateRoute>\n              <PrivateRoute path=\"/game\" component={GameCategory}></PrivateRoute>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </AppContext.Provider>\n    </Router>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}